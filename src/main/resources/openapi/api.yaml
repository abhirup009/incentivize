openapi: 3.0.3
info:
  title: Incentivization Platform API
  description: API for external systems to publish user action events to the platform.
  version: 1.0.0
  contact:
    name: API Support
    email: support@example.com
  license:
    name: Proprietary
servers:
  - url: /api/v1
    description: Default server
paths:
  /health:
    get:
      summary: Health check endpoint
      description: Returns 200 OK if the service is running properly
      operationId: healthCheck
      tags:
        - Health
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
  /events:
    post:
      summary: Publish a user action event
      description: Allows an authenticated service to publish an `ActionEvent` to the Incentivization Platform. The event will be forwarded to the internal event bus for further processing.
      operationId: publishEvent
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionEvent'
      responses:
        '202':
          description: Event accepted for processing
        '400':
          description: Invalid request payload
  /limits:
    post:
      summary: Create a new limit definition
      operationId: createLimit
      tags:
        - Limit
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LimitCreateRequest'
      responses:
        '201':
          description: Limit created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Limit'
        '400':
          description: Invalid payload
  /limits/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
    get:
      summary: Get a limit by ID
      operationId: getLimit
      tags:
        - Limit
      responses:
        '200':
          description: Limit found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Limit'
        '404':
          description: Limit not found
    put:
      summary: Update an existing limit
      operationId: updateLimit
      tags:
        - Limit
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LimitUpdateRequest'
      responses:
        '200':
          description: Limit updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Limit'
        '404':
          description: Limit not found
  /tenants/{tenantId}/limits:
    parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          format: uuid
    get:
      summary: List limits for a tenant
      operationId: listLimits
      tags:
        - Limit
      responses:
        '200':
          description: List of limits
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Limit'
components:
  schemas:
    HealthResponse:
      type: object
      properties:
        status:
          type: string
          example: "UP"
          description: Current health status of the service
    ActionEvent:
      type: object
      required: [tenantId, userId, actionCode, eventTimestamp]
      properties:
        tenantId:
          type: string
          format: uuid
          description: Tenant identifier
        userId:
          type: string
          format: uuid
          description: User identifier
        actionCode:
          type: string
          description: Code representing the type of action performed
        eventTimestamp:
          type: string
          format: date-time
          description: ISO-8601 timestamp of when the event occurred
        attributes:
          type: object
          additionalProperties: true
          description: Additional event metadata
    Limit:
      type: object
      required: [id, tenantId, code, cap, window, status]
      properties:
        id:
          type: string
          format: uuid
        tenantId:
          type: string
          format: uuid
        code:
          type: string
        cap:
          type: integer
        window:
          type: string
          description: Window for limit e.g. DAILY, MONTHLY
        status:
          type: string
          enum: [ACTIVE, PAUSED]
    LimitCreateRequest:
      type: object
      required: [tenantId, code, cap, window]
      properties:
        tenantId:
          type: string
          format: uuid
        code:
          type: string
        cap:
          type: integer
        window:
          type: string
          description: Window for limit e.g. DAILY, MONTHLY
    LimitUpdateRequest:
      type: object
      properties:
        cap:
          type: integer
        status:
          type: string
          enum: [ACTIVE, PAUSED]
